[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "T2D: Exercise and Genetic Expression Profile",
    "section": "",
    "text": "Development version:\n\nonly the program is displayed within these pages.\nno data is attached to the repository or displayed within the pages.\nno output is displayed within the pages.\n\nOutputs will be included and made available within the program if the associated manuscript is accepted for publication in peer-review journal."
  },
  {
    "objectID": "t2d_03_bds.html",
    "href": "t2d_03_bds.html",
    "title": "1  Missingness in adlb and advs",
    "section": "",
    "text": "Show the code\nadsl <- dbs.data::adsl\nadvs <- dbs.data::advs\nadlb <- dbs.data::adlb\n\n\n\n\nShow the code\nlibrary(ggplot2)\ngg <- rbind(adlb, advs) |>\n  ggplot(aes(subjid, paramcd, fill = dtype)) +\n  scale_fill_manual(values = c(\"gray\", \"orange\")) +\n  geom_tile(color = \"gray50\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\nShow the code\ngg"
  },
  {
    "objectID": "t2d_08_dmg.html",
    "href": "t2d_08_dmg.html",
    "title": "2  Demographics and Baseline Anthropometrics",
    "section": "",
    "text": "Target:\n\n\nTable: Demographics and baseline anthropometrics are tested via an Anova.\n\nSupp. Table: Post-hoc estimations / tests by diabetes groups.\n\nSupp. Table: extension of the anova to additional ADVS/ADLB parameters.\n\n\n\nShow the code\nparams <- yaml::read_yaml(\"_prog.yml\")\ndevtools::load_all(\"src/pkg/dbs.data\")\n\n\nℹ Loading dbs.data\n\n\nShow the code\ndevtools::load_all(\"src/pkg/latarnia.utils\")\n\n\nℹ Loading latarnia.utils\n\n\nLoading required package: grid\n\n\nLoading required package: shiny\n\n\nShow the code\nknitr::opts_chunk$set(results = params$knitr$results)\n\n\n\n\nShow the code\nadsl <- dbs.data::adsl\nadvs <- dbs.data::advs\nadlb <- dbs.data::adlb\n\n\n\n\nShow the code\nads <- adlb |>\n  rbind(advs) |>\n  subset(dtype == \"\" & avisit == \"Baseline\") |>\n  subset(select = c(subjid, paramcd, avisit, aval, dtype)) |>\n  rbind(\n    adsl |>\n      subset(select = -c(diab, diabcd)) |>\n      tidyr::pivot_longer(\n        cols = c(\"age\", \"trainn\"), names_to = \"paramcd\", values_to = \"aval\"\n      ) |>\n      within(dtype <- \"\") |>\n      within(avisit <- \"Baseline\")\n  ) |>\n  (\\(x) merge(x = adsl[c(\"subjid\", \"diabcd\")], y = x, by = \"subjid\"))() |>\n  (\\(df, fct = \"diabcd\") {\n    df[paste0(fct, \"_n\")] <- factor_n(df, fct, id = \"subjid\", sep = \" \")\n    df\n  })() |>\n  within(\n    paramcd <- factor(\n      paramcd,\n      levels = c(\n        \"age\", \"trainn\", \"GLU0\", \"GLU30\", \"GLU60\", \"GLU120\",\n        \"INSULIN0\", \"INSULIN30\", \"INSULIN60\", \"INSULIN120\",\n        \"HBA1C\", \"HOMAB\", \"HOMAIR\", \"MATSUDA\",\n        \"TRIG\", \"CHOL\", \"LDL\", \"HDL\", \"VO2MAXE\", \"WEIGHT\", \"BMI\",\n        \"FATMASS\", \"BODYFATP\", \"LEANMASS\", \"VAT\",\n        \"DCAL\", \"FATACFR\", \"DCARBT\", \"DFATT\", \"DPROT\", \"SMMASS\",\n        \"VO2MAXLBM\", \"VO2MAXML\"\n      )\n    ) \n  ) |>\n  (\\(df) df[order(df$paramcd), ])()\n\n\n\n\nShow the code\nformat_pval <- function(x) {\n  p <- round(x, 5)\n  ifelse(\n    test = p < 0.0001,\n    yes = \"<0.0001\",\n    no = ifelse(\n      test = p < 0.001,\n      yes = format(round(p, 4), nsmall = 4),\n      no = ifelse(\n        test = p < 0.01,\n        yes = format(round(p, 3), nsmall = 3),\n        no = format(round(p, 2), nsmall = 2)\n      )\n    )\n  )\n}\n\nlm_by_paramcd <- function(x,\n                          dep_var = \"aval\",\n                          indep_var = \"diabcd_n\",\n                          covariate = NULL) {\n  \n  formula <- paste(\n    dep_var, \"~\", \n    if (!is.null(covariate)) paste(covariate, \"+\"),\n    indep_var\n  )\n  formula <- as.formula(formula)\n  \n  lapply(\n    x,\n    \\(x) list(data = x, lm = lm(formula, data = x))\n  )\n}\n\nmake_specs <- function(var) as.formula(paste(\"~\", var))\nlsm_by_param <- function(x, indep_var = \"diabcd_n\") {\n  lapply(\n    x,\n    \\(x) {\n      mod_em <- emmeans::emmeans(x$lm, specs = make_specs(indep_var))\n      y <- multcomp::cld(mod_em, Letters = letters)\n      y <- as.data.frame(y)\n      cbind(\n        paramcd = unique(x$data$paramcd),\n        y,\n        diabcd_f = car::Anova(x$lm)[indep_var, \"Pr(>F)\"]\n      )\n    }\n  )\n}\n\nlsm_pairs_by_param <- function(x, indep_var = \"diabcd_n\")\n  lapply(\n    x,\n    \\(x) {\n      mod_em <- emmeans::emmeans(\n        x$lm, specs = indep_var, contr = \"revpairwise\"\n      )\n      y <- merge(\n        as.data.frame(mod_em$contrast)[c(\"contrast\", \"p.value\")],\n        confint(mod_em)$contrasts\n      )\n      cbind(paramcd = unique(x$data$paramcd), y)\n    }\n  )"
  },
  {
    "objectID": "t2d_08_dmg.html#tab-08-01---demographics-and-baseline-anthropometrics-by-diabetes-group",
    "href": "t2d_08_dmg.html#tab-08-01---demographics-and-baseline-anthropometrics-by-diabetes-group",
    "title": "2  Demographics and Baseline Anthropometrics",
    "section": "2.2 Tab 08 01 - Demographics and Baseline Anthropometrics by Diabetes Group",
    "text": "2.2 Tab 08 01 - Demographics and Baseline Anthropometrics by Diabetes Group\n\n\nShow the code\ntab_08_01_raw <- ads |>\n  subset(\n    paramcd %in% c(\n      \"age\", \"trainn\", \"GLU0\", \"GLU30\", \"GLU60\", \"GLU120\",\n      \"INSULIN0\", \"INSULIN30\", \"INSULIN60\", \"INSULIN120\",\n      \"HBA1C\", \"HOMAB\", \"HOMAIR\", \"MATSUDA\",\n      \"TRIG\", \"CHOL\", \"LDL\", \"HDL\", \"VO2MAXE\", \"WEIGHT\", \"BMI\",\n      \"FATMASS\", \"BODYFATP\", \"LEANMASS\", \"VAT\"\n    )\n  ) |>\n  (\\(x) split(x, f = x$paramcd, drop = TRUE))() |>\n  lm_by_paramcd() |>\n  lsm_by_param() |>\n  (\\(x) Reduce(rbind, x))()\n\nlibrary(tidyr)\n\n\n\nAttaching package: 'tidyr'\n\n\nThe following object is masked from 'package:testthat':\n\n    matches\n\n\nShow the code\ntab_08_01 <- tab_08_01_raw |>\n  (\\(df) df[order(df$diabcd_n), ])() |>\n  within({\n    val <- paste0(\n      signif(emmean, 3),\n      \" (\", signif(lower.CL, 3), \", \", signif(upper.CL, 3), \")\"\n    )\n    pval <- format_pval(diabcd_f)\n  }) |>\n  pivot_wider(\n    id_cols = c(\"paramcd\", \"pval\", \"diabcd_f\"),\n    values_from = \"val\",\n    names_from = \"diabcd_n\"\n  )\ntab_08_01\n\n\n\n\nShow the code\nlibrary(flextable)\n\n\n\nAttaching package: 'flextable'\n\n\nThe following objects are masked from 'package:latarnia.utils':\n\n    add_footer, add_header\n\n\nShow the code\ntab_08_01_ft <- tab_08_01 |>\n  subset(select = -diabcd_f) |>\n  flextable() |>\n  autofit() |>\n  add_header_lines(wrap_long_lines(\n    \"Analysis Set: Full Analysis Set - Observed Cases at baseline\"\n  )) |>\n  set_caption(\n    caption = wrap_long_lines(\n      \"Tab 08 01 - Analysis of Variance / Least Means Square estimations\n      (95% Confidence Interval) of Demographics Parameters and Baseline\n      Anthropometrics by Diabetes Group\"\n  )\n  ) |>\n  footnote(\n    part = \"header\",\n    i = 2, j = 2,\n    value = as_paragraph(\n      \"Note: pval, p value of diabetes group effect test by F test.\"\n    ),\n    ref_symbols = \"a\"\n  ) |>\n  footnote(\n    value = as_paragraph(\n      \"Source: ADSL and ADVS/ADLB observed cases at baseline.\"\n    ),\n    ref_symbols = \"\"\n  ) |>\n  theme_booktabs()\ntab_08_01_ft\n\n\n\n\nShow the code\nbnm <- \"tab_08_01\"\ndir_tab <- params$paths$tab\ndir_dta <- params$paths$dta\n\nfile.path(dir_tab, paste0(bnm, \"_ft.RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_01_ft, file = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_01_ft.RData\n\n\nShow the code\nfile.path(dir_dta, paste0(bnm, \".RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_01, file = .)\n\n\n[output] Table saved as ../data/tab_08_01.RData\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"docx\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_docx(tab_08_01_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_01.docx\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"html\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_html(tab_08_01_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_01.html\n\n\nShow the code\nfile.path(dir_dta, paste(bnm, sep = \".\", \"csv\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  write.csv(tab_08_01, file = ., row.names = FALSE)\n\n\n[output] Table saved as ../data/tab_08_01.csv"
  },
  {
    "objectID": "t2d_08_dmg.html#tab-08-02---post-hoc-demographics-and-baseline-anthropometrics-by-diabetes-group",
    "href": "t2d_08_dmg.html#tab-08-02---post-hoc-demographics-and-baseline-anthropometrics-by-diabetes-group",
    "title": "2  Demographics and Baseline Anthropometrics",
    "section": "2.3 Tab 08 02 - Post-hoc: Demographics and Baseline Anthropometrics by Diabetes Group",
    "text": "2.3 Tab 08 02 - Post-hoc: Demographics and Baseline Anthropometrics by Diabetes Group\n\n\nShow the code\ntab_08_02_raw <- ads |>\n  subset(\n    paramcd %in% c(\n      \"age\", \"trainn\", \"GLU0\", \"GLU30\", \"GLU60\", \"GLU120\",\n      \"INSULIN0\", \"INSULIN30\", \"INSULIN60\", \"INSULIN120\",\n      \"HBA1C\", \"HOMAB\", \"HOMAIR\", \"MATSUDA\",\n      \"TRIG\", \"CHOL\", \"LDL\", \"HDL\", \"VO2MAXE\", \"WEIGHT\", \"BMI\",\n      \"FATMASS\", \"BODYFATP\", \"LEANMASS\", \"VAT\"\n    )\n  ) |>\n  (\\(x) split(x, f = x$paramcd, drop = TRUE))() |>\n  lm_by_paramcd(indep_var = \"diabcd\") |>\n  lsm_pairs_by_param(indep_var = \"diabcd\")  |>\n  (\\(x) Reduce(rbind, x))()\n\nlibrary(tidyr)\ntab_08_02 <- tab_08_02_raw |>\n  subset(select = c(\n    paramcd, contrast, estimate, SE, df, p.value, lower.CL, upper.CL\n  ))\n\nlibrary(flextable)\ntab_08_02_ft <- tab_08_02 |>\n  (\\(x) split(x, f = x$paramcd))() |>\n  lapply(\n    \\(x) {\n      x$p.value <- format(round(x$p.value, 5))\n      x$estimate <- format(signif(x$estimate, 5))\n      x$SE <- format(signif(x$SE, 6))\n      x$lower.CL <- format(signif(x$lower.CL, 5))\n      x$upper.CL <- format(signif(x$upper.CL, 5))\n      x\n    }) |>\n  (\\(x) Reduce(rbind, x))()|>\n  flextable() |>\n  fontsize(size = 9, part = \"all\") |>\n  autofit() |>\n    add_header_lines(\n    \"Analysis Set: Full Analysis Set - Observed Cases at baseline\"\n  ) |>\n  set_caption(\n    caption = wrap_long_lines(\n      \"Tab 08 02 - Post-hoc tests for the Analysis of Variance of\n      Demographics and Baseline Anthropometrics by Diabetes Group\"\n  )\n  ) |>\n  footnote(\n    value = as_paragraph(wrap_long_lines(\n      \"CL, 95% Confidence Limit; SE, Standard Error.\"\n    )),\n    ref_symbols = \"\"\n  ) |>\n  footnote(\n    value = as_paragraph(wrap_long_lines(\n      \"Note: P value adjustment by Tukey's method for comparing a family of\n      3 estimates.\"\n    )),\n    ref_symbols = \"\"\n  )|>\n    footnote(\n    value = as_paragraph(wrap_long_lines(\n      \"Source: ADSL and ADVS/ADLB observed cases at\n      baseline.\"\n    )),\n    ref_symbols = \"\"\n  ) |>\n  theme_booktabs()\n\ntab_08_02_ft\n\n\n\n\nShow the code\nbnm <- \"tab_08_02\"\ndir_tab <- params$paths$tab\ndir_dta <- params$paths$dta\n\nfile.path(dir_tab, paste0(bnm, \"_ft.RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_02_ft, file = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_02_ft.RData\n\n\nShow the code\nfile.path(dir_dta, paste0(bnm, \".RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_02, file = .)\n\n\n[output] Table saved as ../data/tab_08_02.RData\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"docx\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_docx(tab_08_02_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_02.docx\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"html\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_html(tab_08_02_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_02.html\n\n\nShow the code\nfile.path(dir_dta, paste(bnm, sep = \".\", \"csv\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  write.csv(tab_08_02, file = ., row.names = FALSE)\n\n\n[output] Table saved as ../data/tab_08_02.csv"
  },
  {
    "objectID": "t2d_08_dmg.html#tab-08-03---demographics-and-baseline-anthropometrics-by-diabetes-group-additional-parameters",
    "href": "t2d_08_dmg.html#tab-08-03---demographics-and-baseline-anthropometrics-by-diabetes-group-additional-parameters",
    "title": "2  Demographics and Baseline Anthropometrics",
    "section": "2.4 Tab 08 03 - Demographics and Baseline Anthropometrics by Diabetes Group (additional parameters)",
    "text": "2.4 Tab 08 03 - Demographics and Baseline Anthropometrics by Diabetes Group (additional parameters)\n\n\nShow the code\ntab_08_03_raw <- ads |>\n  subset(\n    !paramcd %in% c(\n      \"age\", \"trainn\", \"GLU0\", \"GLU30\", \"GLU60\", \"GLU120\",\n      \"INSULIN0\", \"INSULIN30\", \"INSULIN60\", \"INSULIN120\",\n      \"HBA1C\", \"HOMAB\", \"HOMAIR\", \"MATSUDA\",\n      \"TRIG\", \"CHOL\", \"LDL\", \"HDL\", \"VO2MAXE\", \"WEIGHT\", \"BMI\",\n      \"FATMASS\", \"BODYFATP\", \"LEANMASS\", \"VAT\"\n    )\n  ) |>\n  (\\(x) split(x, f = x$paramcd, drop = TRUE))() |>\n  lm_by_paramcd() |>\n  lsm_by_param() |>\n  (\\(x) Reduce(rbind, x))()\n\nlibrary(tidyr)\ntab_08_03 <- tab_08_03_raw |>\n  (\\(df) df[order(df$diabcd_n), ])() |>\n  within({\n    val <- paste0(\n      signif(emmean, 3),\n      \" (\", signif(lower.CL, 3), \", \", signif(upper.CL, 3), \")\"\n    )\n    pval <- format_pval(diabcd_f)\n  }) |>\n  pivot_wider(\n    id_cols = c(\"paramcd\", \"pval\", \"diabcd_f\"),\n    values_from = \"val\",\n    names_from = \"diabcd_n\"\n  )\ntab_08_03\n\n\n\n\nShow the code\nlibrary(flextable)\ntab_08_03_ft <- tab_08_03 |>\n  subset(select = -diabcd_f) |>\n  flextable() |>\n  autofit() |>\n  add_header_lines(wrap_long_lines(\n    \"Analysis Set: Full Analysis Set - Observed Cases at baseline\"\n  )) |>\n  set_caption(\n    caption = wrap_long_lines(\n      \"Tab 08 03 - Analysis of Variance / Least Means Square estimations\n      (95% Confidence Interval) of Demographics Parameters and Baseline\n      Anthropometrics by Diabetes Group for Supplementary Parameters\"\n  )\n  ) |>\n  footnote(\n    part = \"header\",\n    i = 2, j = 2,\n    value = as_paragraph(\n      \"Note: pval, p value of diabetes group effect test by F test.\"\n    ),\n    ref_symbols = \"a\"\n  ) |>\n  footnote(\n    value = as_paragraph(\n      \"Source: ADSL and ADVS/ADLB observed cases at baseline.\"\n    ),\n    ref_symbols = \"\"\n  ) |>\n  theme_booktabs()\ntab_08_03_ft\n\n\n\n\nShow the code\nbnm <- \"tab_08_03\"\ndir_tab <- params$paths$tab\ndir_dta <- params$paths$dta\n\nfile.path(dir_tab, paste0(bnm, \"_ft.RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_03_ft, file = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_03_ft.RData\n\n\nShow the code\nfile.path(dir_dta, paste0(bnm, \".RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_03, file = .)\n\n\n[output] Table saved as ../data/tab_08_03.RData\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"docx\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_docx(tab_08_03_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_03.docx\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"html\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_html(tab_08_03_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_03.html\n\n\nShow the code\nfile.path(dir_dta, paste(bnm, sep = \".\", \"csv\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  write.csv(tab_08_03, file = ., row.names = FALSE)\n\n\n[output] Table saved as ../data/tab_08_03.csv"
  },
  {
    "objectID": "t2d_08_dmg.html#tab-08-04---post-hoc-demographics-and-baseline-anthropometrics-by-diabetes-group-additional-parameters",
    "href": "t2d_08_dmg.html#tab-08-04---post-hoc-demographics-and-baseline-anthropometrics-by-diabetes-group-additional-parameters",
    "title": "2  Demographics and Baseline Anthropometrics",
    "section": "2.5 Tab 08 04 - Post-hoc: Demographics and Baseline Anthropometrics by Diabetes Group (additional parameters)",
    "text": "2.5 Tab 08 04 - Post-hoc: Demographics and Baseline Anthropometrics by Diabetes Group (additional parameters)\n\n\nShow the code\ntab_08_04_raw <- ads |>\n  subset(\n    ! paramcd %in% c(\n      \"age\", \"trainn\", \"GLU0\", \"GLU30\", \"GLU60\", \"GLU120\",\n      \"INSULIN0\", \"INSULIN30\", \"INSULIN60\", \"INSULIN120\",\n      \"HBA1C\", \"HOMAB\", \"HOMAIR\", \"MATSUDA\",\n      \"TRIG\", \"CHOL\", \"LDL\", \"HDL\", \"VO2MAXE\", \"WEIGHT\", \"BMI\",\n      \"FATMASS\", \"BODYFATP\", \"LEANMASS\", \"VAT\"\n    )\n  ) |>\n  (\\(x) split(x, f = x$paramcd, drop = TRUE))() |>\n  lm_by_paramcd(indep_var = \"diabcd\") |>\n  lsm_pairs_by_param(indep_var = \"diabcd\")  |>\n  (\\(x) Reduce(rbind, x))()\n\nlibrary(tidyr)\ntab_08_04 <- tab_08_04_raw |>\n  subset(select = c(\n    paramcd, contrast, estimate, SE, df, p.value, lower.CL, upper.CL\n  ))\n\nlibrary(flextable)\ntab_08_04_ft <- tab_08_04 |>\n  (\\(x) split(x, f = x$paramcd))() |>\n  lapply(\n    \\(x) {\n      x$p.value <- format(round(x$p.value, 5))\n      x$estimate <- format(signif(x$estimate, 5))\n      x$SE <- format(signif(x$SE, 6))\n      x$lower.CL <- format(signif(x$lower.CL, 5))\n      x$upper.CL <- format(signif(x$upper.CL, 5))\n      x\n    }) |>\n  (\\(x) Reduce(rbind, x))()|>\n  flextable() |>\n  fontsize(size = 9, part = \"all\") |>\n  autofit() |>\n    add_header_lines(\n    \"Analysis Set: Full Analysis Set - Observed Cases at baseline\"\n  ) |>\n  set_caption(\n    caption = wrap_long_lines(\n      \"Tab 08 04 - Post-hoc tests for the Analysis of Variance of\n      Demographics and Baseline Anthropometrics by Diabetes Group\"\n  )\n  ) |>\n  footnote(\n    value = as_paragraph(wrap_long_lines(\n      \"CL, 95% Confidence Limit; SE, Standard Error.\"\n    )),\n    ref_symbols = \"\"\n  ) |>\n  footnote(\n    value = as_paragraph(wrap_long_lines(\n      \"Note: P value adjustment by Tukey's method for comparing a family of\n      3 estimates.\"\n    )),\n    ref_symbols = \"\"\n  )|>\n    footnote(\n    value = as_paragraph(wrap_long_lines(\n      \"Source: ADSL and ADVS/ADLB observed cases at\n      baseline.\"\n    )),\n    ref_symbols = \"\"\n  ) |>\n  theme_booktabs()\n\ntab_08_04_ft\n\n\n\n\nShow the code\nbnm <- \"tab_08_04\"\ndir_tab <- params$paths$tab\ndir_dta <- params$paths$dta\n\nfile.path(dir_tab, paste0(bnm, \"_ft.RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_04_ft, file = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_04_ft.RData\n\n\nShow the code\nfile.path(dir_dta, paste0(bnm, \".RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_08_04, file = .)\n\n\n[output] Table saved as ../data/tab_08_04.RData\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"docx\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_docx(tab_08_04_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_04.docx\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"html\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_html(tab_08_04_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_08_04.html\n\n\nShow the code\nfile.path(dir_dta, paste(bnm, sep = \".\", \"csv\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  write.csv(tab_08_04, file = ., row.names = FALSE)\n\n\n[output] Table saved as ../data/tab_08_04.csv"
  },
  {
    "objectID": "t2d_09_chg.html",
    "href": "t2d_09_chg.html",
    "title": "3  Anthropometrics Change From Baseline",
    "section": "",
    "text": "Questions: for the analysis of a post-treatment values, should we analyse the change from baseline or percentage change from baseline? Should we adjust for the baseline?\nBack to 2003, in the context of randomized clinical trial, the European Medicines Agency (COMMITTEE FOR PROPRIETARY MEDICINAL PRODUCTS 2003), when the endpoint is studied as a change from baseline, the adjustment for baseline improves the accuracy in comparison to non-baseline adjustment; estimates becomes also equivalent to the standard linear model, the choice of change from baseline analysis or raw value is then only a question of interpretability. They renewed the recommendation in 2015 (Committee for Medicinal Products for Human Use (CHMP) 2015).\nFrom the academic side, the topic was repeatedly studied:\n\nVan Breukelen (2006): > “In randomized studies both methods [Anova, no BL adjustment vs Ancova] > are unbiased, but ANCOVA has more power”\nLiu et al. (2009) also highlighted the benefits of adjustment for baseline as a covariate.\nthis was later confirmed by Zhang et al. (2014).\nMore recently O’Connell et al. (2017) also defended the superiority of the Ancova-change: \\(y_i = \\beta_0 + \\beta_1 X_i + \\beta_2 Y_{0i,=BL} + \\varepsilon_i\\)\n\n\n_“Consistent with existing literature, our results demonstrate that each method leads to unbiased treatment effect estimates, and based on precision of estimates, 95% coverage probability, and power, ANCOVA modeling of either change scores or post-treatment score as the outcome, prove to be the most effective._”\n\nMost of the authors above are specifically working on randomized trial, Vickers (2001) also brought some light on the topic, and highlighted in addition that: working with percentage change is generally a bad idea. The extended to a theoretical works also indicated that the percentage change from baseline “will also fail to protect from bias in the case of baseline imbalance and will lead to an excess of trials with non-normally distributed outcome data”.\n\n\nShow the code\nparams <- yaml::read_yaml(\"_prog.yml\")\ndevtools::load_all(\"src/pkg/dbs.data\")\n\n\nℹ Loading dbs.data\n\n\nShow the code\ndevtools::load_all(\"src/pkg/latarnia.utils\")\n\n\nℹ Loading latarnia.utils\n\n\nLoading required package: grid\n\n\nLoading required package: shiny\n\n\nShow the code\nknitr::opts_chunk$set(results = params$knitr$results)\n\n\n\n\nShow the code\nadsl <- dbs.data::adsl\nadvs <- dbs.data::advs\nadlb <- dbs.data::adlb\n\n\n\n\nShow the code\nads <- adlb |>\n  rbind(advs) |>\n  subset(basetype == \"\" & avisit != \"Baseline\") |>\n  subset(select = c(subjid, paramcd, avisit, base, chg)) |>\n  (\\(x) merge(x = adsl[c(\"subjid\", \"diabcd\")], y = x, by = \"subjid\"))() |>\n  (\\(df, fct = \"diabcd\") {\n    df[paste0(fct, \"_n\")] <- factor_n(df, fct, id = \"subjid\", sep = \" \")\n    df\n  })()\n\nhead(ads)\n\n\n\n\nShow the code\nformat_pval <- function(x) {\n  p <- round(x, 5)\n  ifelse(\n    test = p < 0.0001,\n    yes = \"<0.0001\",\n    no = ifelse(\n      test = p < 0.001,\n      yes = format(round(p, 4), nsmall = 4),\n      no = ifelse(\n        test = p < 0.01,\n        yes = format(round(p, 3), nsmall = 3),\n        no = format(round(p, 2), nsmall = 2)\n      )\n    )\n  )\n}\n\nlm_by_paramcd <- function(x,\n                          dep_var = \"aval\",\n                          indep_var = \"diabcd_n\",\n                          covariate = NULL) {\n  \n  formula <- paste(\n    dep_var, \"~\", \n    if (!is.null(covariate)) paste(covariate, \"+\"),\n    indep_var\n  )\n  formula <- as.formula(formula)\n  \n  lapply(\n    x,\n    \\(x) list(data = x, lm = lm(formula, data = x))\n  )\n}\n\nmake_specs <- function(var) as.formula(paste(\"~\", var))\nlsm_by_param <- function(x, indep_var = \"diabcd_n\") {\n  lapply(\n    x,\n    \\(x) {\n      mod_em <- emmeans::emmeans(x$lm, specs = make_specs(indep_var))\n      y <- multcomp::cld(mod_em, Letters = letters)\n      y <- as.data.frame(y)\n      cbind(\n        paramcd = unique(x$data$paramcd),\n        y,\n        diabcd_f = car::Anova(x$lm)[indep_var, \"Pr(>F)\"]\n      )\n    }\n  )\n}\n\n\n\n\nShow the code\ntab_09_01_raw <- ads |>\n  (\\(x) split(x, f = x$paramcd))() |>\n  lm_by_paramcd(dep_var = \"chg\", covariate = \"base\", indep_var = \"diabcd_n\") |>\n  lsm_by_param(indep_var = \"diabcd_n\") |>\n  (\\(x) Reduce(rbind, x))()\n \ntab_09_01 <- tab_09_01_raw |>\n  (\\(df) df[order(df$diabcd_n), ])() |>\n  within({\n    val <- paste0(\n      signif(emmean, 3),\n      \" (\", signif(lower.CL, 3), \", \", signif(upper.CL, 3), \")\"\n    )\n    pval <- format_pval(diabcd_f)\n  }) |>\n  tidyr::pivot_wider(\n    id_cols = c(\"paramcd\", \"pval\", \"diabcd_f\"),\n    values_from = \"val\",\n    names_from = \"diabcd_n\"\n  ) |>\n  (\\(x) x[order(x$diabcd_f), ])()\ntab_09_01\n\n\n\n\nShow the code\nlibrary(flextable)\n\n\n\nAttaching package: 'flextable'\n\n\nThe following objects are masked from 'package:latarnia.utils':\n\n    add_footer, add_header\n\n\nShow the code\nwrap_line <- function(x) paste(strwrap(x, width = 80), collapse = \" \")\ntab_09_01_ft <- tab_09_01 |>\n  subset(select = -diabcd_f) |>\n  flextable() |>\n  autofit() |>\n  footnote(\n    value = as_paragraph(\n      \"Note: rows are ordered by increasing p values, most significant on top.\"\n    ),\n    ref_symbols = \"\"\n  ) |>\n  footnote(\n    part = \"header\",\n    i = 1, j = 2,\n    value = as_paragraph(\n      \"Note: pval, p value of diabetes group effect test by F test.\"\n    ),\n    ref_symbols = \"a\"\n  ) |>\n  footnote(\n    value = as_paragraph(wrap_line(\n      \"Source: Full Analysis Set, observed cases at baseline and post\n      intervention.\"\n    )),\n    ref_symbols = \"\"\n  ) |>\n  add_header_lines(wrap_long_lines(\n    \"Analysis Set: Full Analysis Set - Observed Cases\"\n  )) |>\n  set_caption(\n    caption =  wrap_long_lines(\n      \"Tab 09 01 - Analysis of Covariance / Least Means Square estimations of\n      Anthropometrics Changes from baseline by Diabetes Group at\n      Month 3 (95% Confidence Interval) Adjusted for Baseline\"\n    )\n  ) |>\n  theme_booktabs()\ntab_09_01_ft\n\n\n\n\nShow the code\nbnm <- \"tab_09_01\"\ndir_tab <- params$paths$tab\ndir_dta <- params$paths$dta\n\nfile.path(dir_tab, paste0(bnm, \"_ft.RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_09_01_ft, file = .)\n\n\n[output] Table saved as ../tlg/tables/tab_09_01_ft.RData\n\n\nShow the code\nfile.path(dir_dta, paste0(bnm, \".RData\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save(tab_09_01, file = .)\n\n\n[output] Table saved as ../data/tab_09_01.RData\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"docx\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_docx(tab_09_01_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_09_01.docx\n\n\nShow the code\nfile.path(dir_tab, paste(bnm, sep = \".\", \"html\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  save_as_html(tab_09_01_ft, path = .)\n\n\n[output] Table saved as ../tlg/tables/tab_09_01.html\n\n\nShow the code\nfile.path(dir_dta, paste(bnm, sep = \".\", \"csv\")) %T>%\n  message(\"[output] Table saved as \", .) %>%\n  write.csv(tab_09_01, file = ., row.names = FALSE)\n\n\n[output] Table saved as ../data/tab_09_01.csv\n\n\n\n\n\n\nCommittee for Medicinal Products for Human Use (CHMP). 2015. “Guideline on Adjustment for Baseline Covariates in Clinical Trials.” European Medicines Agency. https://www.ema.europa.eu/en/documents/scientific-guideline/guideline-adjustment-baseline-covariates-clinical-trials_en.pdf.\n\n\nCOMMITTEE FOR PROPRIETARY MEDICINAL PRODUCTS. 2003. “POINTS TO CONSIDER ON ADJUSTMENT FOR BASELINE COVARIATES.” The European Agency for the Evaluation of Medicinal Products Evaluation of Medicines for Human Use. https://www.ema.europa.eu/en/documents/scientific-guideline/points-consider-adjustment-baseline-covariates_en.pdf.\n\n\nLiu, Guanghan F, Kaifeng Lu, Robin Mogg, Madhuja Mallick, and Devan V Mehrotra. 2009. “Should Baseline Be a Covariate or Dependent Variable in Analyses of Change from Baseline in Clinical Trials?” Statistics in Medicine 28 (20): 2509–30. https://doi.org/10.1002/sim.3639.\n\n\nO’Connell, Nathaniel S, Lin Dai, Yunyun Jiang, Jaime L Speiser, Ralph Ward, Wei Wei, Rachel Carroll, and Mulugeta Gebregziabher. 2017. “Methods for Analysis of Pre-Post Data in Clinical Research: A Comparison of Five Common Methods.” Journal of Biometrics & Biostatistics 8 (1): 1. https://doi.org/10.4172/2155-6180.1000334.\n\n\nVan Breukelen, G. 2006. “ANCOVA Versus Change from Baseline: More Power Inrandomized Studies, More Bias in Nonrandomized Studies.” Journal of ClinicalEpidemiology, 59–920. https://doi.org/10.1016/j.jclinepi.2006.02.007.\n\n\nVickers, Andrew J. 2001. “The Use of Percentage Change from Baseline as an Outcome in a Controlled Trial Is Statistically Inefficient: A Simulation Study.” BMC Medical Research Methodology 1 (1): 1–4. https://doi.org/10.1186/1471-2288-1-6.\n\n\nZhang, Shiyuan, James Paul, Manyat Nantha-Aree, Norman Buckley, Uswa Shahzad, Ji Cheng, Justin DeBeer, et al. 2014. “Empirical Comparison of Four Baseline Covariate Adjustment Methods in Analysis of Continuous Outcomes in Randomized Controlled Trials.” Clinical Epidemiology 6: 227. https://doi.org/10.2147/clep.s56554."
  },
  {
    "objectID": "t2d_06_rna.html",
    "href": "t2d_06_rna.html",
    "title": "4  RNASeq - Refresher",
    "section": "",
    "text": "Target:\n\n\nrefresh the differential expression analysis technics with DESeq2.\n\nupgrade environment for differential expression analysis.\n\nevaluate the impact of confounder adjustment on a specific use case: compare miRNA expression between T2D and NGT at baseline.\n\n\n\nShow the code\nparams <- if (exists(\"params\")) {\n  c(params, yaml::read_yaml(\"_prog.yml\"))\n} else {\n  yaml::read_yaml(\"_prog.yml\")\n}\n\ndevtools::load_all(\"src/pkg/dbs.data\")\n\n\nℹ Loading dbs.data\n\n\nShow the code\ndevtools::load_all(\"src/pkg/latarnia.utils\")\n\n\nℹ Loading latarnia.utils\n\n\nLoading required package: grid\n\n\nLoading required package: shiny\n\n\nShow the code\nknitr::opts_chunk$set(results = params$knitr$results)\n\nlibrary(assertthat)\nsource(\"R/ngs.R\")\n\n\n\n\n\n\nShow the code\nadsl <- dbs.data::adsl\nadvs <- dbs.data::advs\nadlb <- dbs.data::adlb\n\n#' Subjid and Visit to Sample\n#' \nsubjvis_to_spl <- function(df) paste0(df$subjid, \"v\", df$avisitn)\n\nads <- adlb |>\n  subset(\n    paramcd %in% c(\n      \"CHOL\", \"HBA1C\", \"HDL\", \"HOMAB\", \"HOMAIR\", \"LDL\", \"MATSUDA\", \"TRIG\"\n    )\n  ) %>%\n  rbind(advs) |>\n  subset(select = -c(ct, dtype, param, base, basetype, chg, pchg)) |>\n  tidyr::pivot_wider(names_from = \"paramcd\", values_from = \"aval\") |>\n  (\\(df) merge(adsl, df, by = \"subjid\"))() |>\n  (\\(df) S4Vectors::DataFrame(df, row.names = subjvis_to_spl(df)))() |>\n  (\\(df) {\n    assertthat::assert_that(all(table(subjvis_to_spl(df)) == 1))\n    df\n  })()\n\nads\n\n\n\n\nShow the code\nrna <- list(# There will be mi-RNA data.\n  mrna = dbs.data::mrna_raw,\n  premirna = dbs.data::premirna_raw,\n  mirna = dbs.data::mirna_raw\n)\n\nrna[c(\"premirna\", \"mirna\")] <- lapply(\n  X = rna[c(\"premirna\", \"mirna\")],\n  FUN = format_mirna\n)\n\n# Rows represent genes.\nrna <- lapply(X = rna, FUN = function(x) y <- x[rowSums(x) > 0, ])\nrna <- lapply(X = rna, as.matrix)\nassertthat::assert_that(all(colnames(rna$premirna) == colnames(rna$mirna)))\nrna$allmirna <- rbind(rna$premirna, rna$mirna)\nlibrary(testthat)\ntest_that(\"rna features discriminated in noexpr, expr\", {\n  lapply(\n    X = rna,\n    FUN = function(x) expect_true(all(rowSums(x) > 0))\n  )\n})\n\n\n\n\nShow the code\nlibrary(MultiAssayExperiment)\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\nShow the code\n#' (Sample-)Map Arrays\n#'\n#' Use the colnames of `x` to deduce the `primary` and `colnames`.\n#' This is used to generate the sample mapping between colData and Experiments.\n#'\n#' @param x (`dataframe`).\n#'\n#' @note In our case, primary and colnames are equivalent, colnames could\n#' be different from primary names when a biological sample has different\n#' names in the biological assays (e.g. machine constraint, technical\n#' repetitions).\n#'\n#' @seealso [MultiAssayExperiment::listToMap()]\n#' @examples\n#' \\dontrun{\n#' lapply(rna, map_arrays)\n#' MultiAssayExperiment::listToMap(lapply(rna, map_arrays))\n#' }\n#'\nmap_arrays <- function(x) {\n  y <- data.frame(colname = colnames(x))\n  y$primary <- y$colname\n  y\n}\n\nbesd_mae <- MultiAssayExperiment(\n  experiments = ExperimentList(rna),\n  colData = ads,\n  sampleMap = listToMap(lapply(rna, map_arrays))\n)\n\nbesd_mae"
  },
  {
    "objectID": "t2d_06_rna.html#de-baseline-all-micro-rna-no-confounding-factor-dds_1",
    "href": "t2d_06_rna.html#de-baseline-all-micro-rna-no-confounding-factor-dds_1",
    "title": "4  RNASeq - Refresher",
    "section": "4.2 DE: Baseline, all micro RNA, no confounding factor (dds_1)",
    "text": "4.2 DE: Baseline, all micro RNA, no confounding factor (dds_1)\n\n\nShow the code\nctrl <- yaml::read_yaml(\"_prog.yml\")$rna\n\nngs_assay <- \"allmirna\"\n\nfilter_for_depth <- function(mae, assay, depth_threshold) {\n  mae[, colSums(mae[[ngs_assay]]) > depth_threshold, ]\n}\n\nfilter_for_visit <- function(mae, visit) {\n  mae[, colData(mae)$avisit == visit, ]\n}\n\nfilter_for_low_expr <- function(mae, assay, cpm_threshold, frac_cols = 1 / 2) {\n  # Genes expressed at least cpm_threshold in frac_cols columns\n  mae[\n    rowSums(cpm(mae[[assay]]) > cpm_threshold) >\n      ncol(mae[[assay]]) * frac_cols,\n    ,\n  ]\n}\n\nads <- besd_mae |>\n  (\\(mae) mae[ , , ngs_assay])() |>\n  filter_for_depth(\"allmirna\", ctrl$depth_threshold[[ngs_assay]]) |>\n  filter_for_visit(\"Baseline\") |>\n  filter_for_low_expr(\"allmirna\", ctrl$cpm_threshold[[ngs_assay]])\n\n\nWarning: 'experiments' dropped; see 'metadata'\n\n\nharmonizing input:\n  removing 282 sampleMap rows not in names(experiments)\n\n\nShow the code\nads\n\ndds_1 <- DESeq2::DESeqDataSetFromMatrix(\n  countData = ads[[ngs_assay]],\n  colData = colData(ads),\n  design = stats::formula(~ diabcd)\n)\n\ndds_1_res <- DESeq2::DESeq(\n  object = dds_1,\n  quiet = FALSE, # default: FALSE\n  minReplicatesForReplace = 7, # default: 7\n  useT = FALSE, # default: FALSE\n  minmu = 0.5, # default: 0.5\n  parallel = TRUE,\n  BPPARAM = BiocParallel::bpparam()\n)\n\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates: 2 workers\n\n\nmean-dispersion relationship\n\n\n-- note: fitType='parametric', but the dispersion trend was not well captured by the\n   function: y = a/x + b, and a local regression fit was automatically substituted.\n   specify fitType='local' or 'mean' to avoid this message next time.\n\n\nfinal dispersion estimates, fitting model and testing: 2 workers\n\n\n-- replacing outliers and refitting for 13 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\nfitting model and testing\n\n\nShow the code\ndds_1_de <- DESeq2::results(\n  dds_1_res,\n  contrast = c(\"diabcd\", test = \"T2D\", ref = \"NGT\"),\n  pAdjustMethod = ctrl$adj_meth\n) |>\n  (\\(df) {\n    df$feature <- rownames(df)\n    df\n  }) () |>\n  within(log_padj <- -1 * log10(padj))\n\nlibrary(ggplot2)\ndds_1_gg <-\n  dds_1_de |> as.data.frame() |>\n  ggplot(mapping = aes(log2FoldChange, log_padj, fill = log10(..count..))) +\n  geom_hline(yintercept = -1 * log10(c(0.05, 0.001)), lty = 2, lwd = .5) +\n  geom_vline(xintercept = c(-1, 1), lty = 2) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.05),\n    label = \"p = 0.05\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.001),\n    label = \"p = 0.001\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  xlab(\"Log2-fold-change\") +\n  ylab(expression(-1 %*% log10(padj))) +\n  stat_bin_hex() +\n  scale_fill_gradient(low = \"black\", high = \"gray90\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\", asp = 2 / 3)\n\n\n\n\nShow the code\ndds_1_gg"
  },
  {
    "objectID": "t2d_06_rna.html#de-baseline-all-micro-rna-accounting-for-age-bmi-dcal-trainn-dds_2",
    "href": "t2d_06_rna.html#de-baseline-all-micro-rna-accounting-for-age-bmi-dcal-trainn-dds_2",
    "title": "4  RNASeq - Refresher",
    "section": "4.3 DE: Baseline, all micro RNA, accounting for Age, BMI, DCAL, Trainn (dds_2)",
    "text": "4.3 DE: Baseline, all micro RNA, accounting for Age, BMI, DCAL, Trainn (dds_2)\n\n\nShow the code\nctrl <- yaml::read_yaml(\"_prog.yml\")$rna\n\nngs_assay <- \"allmirna\"\n\nfilter_for_depth <- function(mae, assay, depth_threshold) {\n  mae[, colSums(mae[[ngs_assay]]) > depth_threshold, ]\n}\n\nfilter_for_visit <- function(mae, visit) {\n  mae[, colData(mae)$avisit == visit, ]\n}\n\nfilter_for_low_expr <- function(mae, assay, cpm_threshold, frac_cols = 1 / 2) {\n  # Genes expressed at least cpm_threshold in frac_cols columns\n  mae[\n    rowSums(cpm(mae[[assay]]) > cpm_threshold) >\n      ncol(mae[[assay]]) * frac_cols,\n    ,\n  ]\n}\n\nscale_confounder <- function(mae, confounder) {\n  for (i in seq_along(confounder)) {\n    cfd <- confounder[i]\n    colData(mae)[cfd] <- scale(colData(mae)[cfd])\n  }\n  mae\n}\nads <- besd_mae |>\n  (\\(mae) mae[ , , ngs_assay])() |>\n  filter_for_depth(\"allmirna\", ctrl$depth_threshold[[ngs_assay]]) |>\n  filter_for_visit(\"Baseline\") |>\n  filter_for_low_expr(\"allmirna\", ctrl$cpm_threshold[[ngs_assay]]) |>\n  scale_confounder(confounder = c(\"age\", \"trainn\", \"BMI\", \"DCAL\"))\n\n\nWarning: 'experiments' dropped; see 'metadata'\n\n\nharmonizing input:\n  removing 282 sampleMap rows not in names(experiments)\n\n\nShow the code\nads\n\ndds_2 <- DESeq2::DESeqDataSetFromMatrix(\n  countData = ads[[ngs_assay]],\n  colData = colData(ads),\n  design = stats::formula(~ age + BMI + trainn + DCAL + diabcd)\n)\n\ndds_2_res <- DESeq2::DESeq(\n  object = dds_2,\n  quiet = FALSE, # default: FALSE\n  minReplicatesForReplace = 7, # default: 7\n  useT = FALSE, # default: FALSE\n  minmu = 0.5, # default: 0.5\n  parallel = TRUE,\n  BPPARAM = BiocParallel::bpparam()\n)\n\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates: 2 workers\n\n\nmean-dispersion relationship\n\n\n-- note: fitType='parametric', but the dispersion trend was not well captured by the\n   function: y = a/x + b, and a local regression fit was automatically substituted.\n   specify fitType='local' or 'mean' to avoid this message next time.\n\n\nfinal dispersion estimates, fitting model and testing: 2 workers\n\n\nShow the code\ndds_2_de <- DESeq2::results(\n  dds_2_res,\n  contrast = c(\"diabcd\", test = \"T2D\", ref = \"NGT\"),\n  pAdjustMethod = ctrl$adj_meth\n) |>\n  (\\(df) {\n    df$feature <- rownames(df)\n    df\n  }) () |>\n  within(log_padj <- -1 * log10(padj))\n\nlibrary(ggplot2)\ndds_2_gg <-\n  dds_2_de |> as.data.frame() |>\n  ggplot(mapping = aes(log2FoldChange, log_padj, fill = log10(..count..))) +\n  geom_hline(yintercept = -1 * log10(c(0.05, 0.001)), lty = 2, lwd = .5) +\n  geom_vline(xintercept = c(-1, 1), lty = 2) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.05),\n    label = \"p = 0.05\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.001),\n    label = \"p = 0.001\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  xlab(\"Log2-fold-change\") +\n  ylab(expression(-1 %*% log10(padj))) +\n  stat_bin_hex() +\n  scale_fill_gradient(low = \"black\", high = \"gray90\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\", asp = 2 / 3)\n\n\n\n\nShow the code\ndds_2_gg"
  },
  {
    "objectID": "t2d_06_rna.html#comparison-withwithout-confounding-factors",
    "href": "t2d_06_rna.html#comparison-withwithout-confounding-factors",
    "title": "4  RNASeq - Refresher",
    "section": "4.4 Comparison with/without confounding factors",
    "text": "4.4 Comparison with/without confounding factors\n\n\nShow the code\ntheme_fun <- function(...) {\n  theme_minimal() +\n    theme(\n      title = element_text(size = 9),\n      text = element_text(size = 9)\n    ) +\n    theme(...)\n}\n\ngg_1_2 <- rbind(\n  within(as.data.frame(dds_1_de), facet <- \"No confounding factors\"),\n  within(as.data.frame(dds_2_de), facet <- \"~Age + BMI + DCAL + Train\")\n) |>\n  ggplot(mapping = aes(log2FoldChange, log_padj, fill = log10(..count..))) +\n  geom_hline(yintercept = -1 * log10(c(0.05, 0.001)), lty = 2, lwd = .5) +\n  geom_vline(xintercept = c(-1, 1), lty = 2) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.05),\n    label = \"p = 0.05\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.001),\n    label = \"p = 0.001\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  xlab(\"Log2-fold-change\") +\n  ylab(expression(-1 %*% log10(padj))) +\n  stat_bin_hex() +\n  scale_fill_gradient(low = \"black\", high = \"gray90\") +\n  facet_wrap(facet ~ ., ncol = 2) +\n  theme_fun(\n    legend.position = \"bottom\"\n  ) +\n  theme(\n    legend.key.width = unit(5, \"lines\"),\n    legend.key.height = unit(.8, \"lines\")\n  )\n\nres <- merge(\n  as.data.frame(dds_1_de),\n  as.data.frame(dds_2_de),\n  by = \"feature\",\n  all = TRUE,\n  suffixes = c(\".asis\", \".cfd\")\n)\n\n\nfun_label <- function(df,\n                      x = \"log2FoldChange.asis\",\n                      y = \"log2FoldChange.cfd\") {\n  cor_fun <- function(meth = \"pearson\") {\n    round(cor(df[[x]], df[[y]], method = meth), 2)\n  }\n  paste0(\n    \"atop(\",\n    \"r == \", cor_fun(), \",\",\n    \"rho == \", cor_fun(\"spearman\"),\n    \")\"\n  )\n}\n\nlim <- range(unlist(res[c(\"log2FoldChange.asis\", \"log2FoldChange.cfd\")]))\ngg_cor_lfc <- ggplot(res, aes(log2FoldChange.asis, log2FoldChange.cfd)) +\n  geom_hex() +\n  scale_fill_viridis_c(option = \"F\", begin = .1, end = .9) +\n  geom_abline(slope = 1, intercept = 0, col = \"red\") +\n  annotate(\n    \"label\", x = -Inf, y = Inf, hjust = 0, vjust = 1,\n    label = fun_label(res),\n    parse = TRUE,\n    family = \"mono\",\n    size = 3\n  )+\n  coord_cartesian(xlim = lim, ylim = lim) +\n  labs(\n    title = \"Log Fold Change (LFC)\",\n    subtitle = \"With / Without Adjustment for Confounding Factors\",\n    x = \"No Adjustment\",\n    y = \"Adjusted for Confounding Factors\"\n  ) +\n  theme_fun(asp = 1)\n\nlim <- range(unlist(res[c(\"log_padj.asis\", \"log_padj.cfd\")]))\ngg_cor_pval <- ggplot(res, aes(log_padj.asis, log_padj.cfd)) +\n  geom_hex() +\n  scale_fill_viridis_c(option = \"D\", begin = .1, end = .9) +\n  geom_abline(slope = 1, intercept = 0, col = \"green2\") +\n  annotate(\n    \"label\", x = -Inf, y = Inf, hjust = 0, vjust = 1,\n    label = fun_label(res, \"log_padj.asis\", \"log_padj.cfd\"),\n    parse = TRUE,\n    family = \"mono\",\n    size = 3\n  )+\n  coord_cartesian(xlim = lim, ylim = lim, clip = \"off\") +\n  labs(\n    title = expression(\"Significance: \"*-1 %.% log10(padj)),\n    subtitle = \"With / Without Adjustment for Confounding Factors\",\n    x = \"No Adjustment\",\n    y = \"Adjusted for Confounding Factors\"\n  ) +\n  theme_fun(asp = 1)\n\nlibrary(cowplot)\np <- plot_grid(\n  plot_grid(gg_1_2) + theme(plot.background = element_rect(color = \"black\")),\n  plot_grid(\n    plot_grid(gg_cor_lfc) +\n      theme(plot.background = element_rect(color = \"black\")),\n    plot_grid(gg_cor_pval) +\n      theme(plot.background = element_rect(color = \"black\")),\n    labels = c(\"B\", \"C\")\n  ),\n  ncol = 1, rel_heights = c(3, 2),\n  labels = c(\"A\", NA)\n)\n\n\np <- clean_slate() |>\n  add_header(c(\"FCA Collin\", \"UMB BESD\"), c(\"Confidential\", \"Draft\")) |>\n  add_title(\n    c(\n      \"Figure 1\",\n      strwrap(\n        \"Volcano plot - Level and significance of Differential Expression among\n        all miRNA at Baseline between T2D and NGT\", width = 80\n      ),\n      \"Analysis Set: Full Analysis Set\"\n    )\n  ) |>\n  add_note(c(\n    \"A: Left panel accounts for Age, BMI, DCAL (diet) and number of trainings in\n    the estimation and test of the differential expression of every gene; it\n    may present marginal differences with the version presented 2 years ago\n    likely due to slight variations in stochastic elements (e.g. missing\n    data imputation).\",\n    \"A: Right panel discards any confounding factors.\",\n    \"B, C: Scatter plots comparing\n    the Log Fold Change estimations (B)/\n    the significance (C, the higher the more significant)\n    with (y axis) without (x axis) adjustment for confounding factors with\n    annotation corresponding to the Pearson's correlation (r) and\n    Spearman's rank correlation (rho).\",\n    \"Hexbin representation: the intensity of each hexagonal bin accounts for\n    the number of genes found in the area it covers.\"\n  )) |>\n  add_figure(p, height = .9) |>\n  add_footer(\n    \"Program t2d_06_rna / Env ayup_dbs:v0.1.0-alpha\",\n    params$version\n  )\n\n\nWarning: Removed 1 rows containing missing values (geom_text).\n\n\nShow the code\nexport_as(\n  p,\n  file = file.path(params$paths$grh, \"fig_06_01.pdf\"),\n  file_graph_alone = file.path(params$paths$grh, \"fig_06_01_af.pdf\")\n)\n\n\n[log] output saved as: ../tlg/graph/fig_06_01.pdf\n\n\n[log] output saved as: ../tlg/graph/fig_06_01_af.pdf (annot. free)\n\n\n\n\nShow the code\nshow_slate(p)"
  },
  {
    "objectID": "t2d_07_mir.html",
    "href": "t2d_07_mir.html",
    "title": "5  micro RNA",
    "section": "",
    "text": "Target:\n\n\nmiRNA DE at baseline without confounding factors.\n\n\n\nShow the code\nparams <- if (exists(\"params\")) {\n  c(params, yaml::read_yaml(\"_prog.yml\"))\n} else {\n  yaml::read_yaml(\"_prog.yml\")\n}\n\ndevtools::load_all(\"src/pkg/dbs.data\")\n\n\nℹ Loading dbs.data\n\n\nShow the code\ndevtools::load_all(\"src/pkg/latarnia.utils\")\n\n\nℹ Loading latarnia.utils\n\n\nLoading required package: grid\n\n\nLoading required package: shiny\n\n\nShow the code\nknitr::opts_chunk$set(results = params$knitr$results)\nlibrary(assertthat)\nsource(\"R/ngs.R\")\n\n\n\n\n\n\nShow the code\nadsl <- dbs.data::adsl\nadvs <- dbs.data::advs\nadlb <- dbs.data::adlb\n\n#' Subjid and Visit to Sample\n#' \nsubjvis_to_spl <- function(df) paste0(df$subjid, \"v\", df$avisitn)\n\nads <- adlb |>\n  subset(\n    paramcd %in% c(\n      \"CHOL\", \"HBA1C\", \"HDL\", \"HOMAB\", \"HOMAIR\", \"LDL\", \"MATSUDA\", \"TRIG\"\n    )\n  ) %>%\n  rbind(advs) |>\n  subset(select = -c(ct, dtype, param, base, basetype, chg, pchg)) |>\n  tidyr::pivot_wider(names_from = \"paramcd\", values_from = \"aval\") |>\n  (\\(df) merge(adsl, df, by = \"subjid\"))() |>\n  (\\(df) S4Vectors::DataFrame(df, row.names = subjvis_to_spl(df)))() |>\n  (\\(df) {\n    assertthat::assert_that(all(table(subjvis_to_spl(df)) == 1))\n    df\n  })()\n\nads\n\n\n\n\nShow the code\nrna <- list(\n  mrna = dbs.data::mrna_raw,\n  premirna = dbs.data::premirna_raw,\n  mirna = dbs.data::mirna_raw\n)\n\nrna[c(\"premirna\", \"mirna\")] <- lapply(\n  X = rna[c(\"premirna\", \"mirna\")],\n  FUN = format_mirna\n)\n\n# Rows represent genes.\nrna <- lapply(X = rna, FUN = function(x) y <- x[rowSums(x) > 0, ])\nrna <- lapply(X = rna, as.matrix)\nassertthat::assert_that(all(colnames(rna$premirna) == colnames(rna$mirna)))\nrna$allmirna <- rbind(rna$premirna, rna$mirna)\nlibrary(testthat)\ntest_that(\"rna features discriminated in noexpr, expr\", {\n  lapply(\n    X = rna,\n    FUN = function(x) expect_true(all(rowSums(x) > 0))\n  )\n})\n\n\n\n\nShow the code\nlibrary(MultiAssayExperiment)\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\nLoading required package: S4Vectors\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n\n\nAttaching package: 'Biobase'\n\n\nThe following object is masked from 'package:MatrixGenerics':\n\n    rowMedians\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    anyMissing, rowMedians\n\n\nShow the code\n#' (Sample-)Map Arrays\n#'\n#' Use the colnames of `x` to deduce the `primary` and `colnames`.\n#' This is used to generate the sample mapping between colData and Experiments.\n#'\n#' @param x (`dataframe`).\n#'\n#' @note In our case, primary and colnames are equivalent, colnames could\n#' be different from primary names when a biological sample has different\n#' names in the biological assays (e.g. machine constraint, technical\n#' repetitions).\n#'\n#' @seealso [MultiAssayExperiment::listToMap()]\n#' @examples\n#' \\dontrun{\n#' lapply(rna, map_arrays)\n#' MultiAssayExperiment::listToMap(lapply(rna, map_arrays))\n#' }\n#'\nmap_arrays <- function(x) {\n  y <- data.frame(colname = colnames(x))\n  y$primary <- y$colname\n  y\n}\n\nbesd_mae <- MultiAssayExperiment(\n  experiments = ExperimentList(rna),\n  colData = ads,\n  sampleMap = listToMap(lapply(rna, map_arrays))\n)\n\nbesd_mae"
  },
  {
    "objectID": "t2d_07_mir.html#dds_1---de-baseline-all-micro-rna",
    "href": "t2d_07_mir.html#dds_1---de-baseline-all-micro-rna",
    "title": "5  micro RNA",
    "section": "5.2 dds_1 - DE: Baseline, all micro RNA",
    "text": "5.2 dds_1 - DE: Baseline, all micro RNA\n\n\nShow the code\nctrl <- yaml::read_yaml(\"_prog.yml\")$rna\n\nngs_assay <- \"allmirna\"\n\nfilter_for_depth <- function(mae, assay, depth_threshold) {\n  mae[, colSums(mae[[ngs_assay]]) > depth_threshold, ]\n}\n\nfilter_for_visit <- function(mae, visit) {\n  mae[, colData(mae)$avisit == visit, ]\n}\n\nfilter_for_low_expr <- function(mae, assay, cpm_threshold, frac_cols = 1 / 2) {\n  # Genes expressed at least cpm_threshold in frac_cols columns\n  mae[\n    rowSums(cpm(mae[[assay]]) > cpm_threshold) >\n      ncol(mae[[assay]]) * frac_cols,\n    ,\n  ]\n}\n\nads <- besd_mae |>\n  (\\(mae) mae[ , , ngs_assay])() |>\n  filter_for_depth(\"allmirna\", ctrl$depth_threshold[[ngs_assay]]) |>\n  filter_for_visit(\"Baseline\") |>\n  filter_for_low_expr(\"allmirna\", ctrl$cpm_threshold[[ngs_assay]])\n\n\nWarning: 'experiments' dropped; see 'metadata'\n\n\nharmonizing input:\n  removing 282 sampleMap rows not in names(experiments)\n\n\nShow the code\ndds_1_dta <- DESeq2::DESeqDataSetFromMatrix(\n  countData = ads[[ngs_assay]],\n  colData = colData(ads),\n  design = stats::formula(~ diabcd)\n)\n\n\n\n\nShow the code\ndds_1_fit <- DESeq2::DESeq(\n  object = dds_1_dta,\n  quiet = FALSE, # default: FALSE\n  minReplicatesForReplace = 7, # default: 7\n  useT = FALSE, # default: FALSE\n  minmu = 0.5, # default: 0.5\n  parallel = TRUE,\n  BPPARAM = BiocParallel::bpparam()\n)\n\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates: 2 workers\n\n\nmean-dispersion relationship\n\n\n-- note: fitType='parametric', but the dispersion trend was not well captured by the\n   function: y = a/x + b, and a local regression fit was automatically substituted.\n   specify fitType='local' or 'mean' to avoid this message next time.\n\n\nfinal dispersion estimates, fitting model and testing: 2 workers\n\n\n-- replacing outliers and refitting for 13 genes\n-- DESeq argument 'minReplicatesForReplace' = 7 \n-- original counts are preserved in counts(dds)\n\n\nestimating dispersions\n\n\nfitting model and testing\n\n\n\n\nShow the code\nde_by_ctrs <- function(df,\n                       ctrs,\n                       adj_meth = ctrl$adj_meth) {\n  lapply(\n    ctrs,\n    fit = df,\n    adj_meth = adj_meth,\n    FUN = function(x, fit, adj_meth) {\n      y <- DESeq2::results(fit, contrast = x, pAdjustMethod = adj_meth)\n      y$feature <- rownames(y)\n      y$log_padj <- -1 * log10(y$padj)\n      y$ctrs <- paste(x[\"test\"], \"vs\", x[\"ref\"])\n      as.data.frame(y)\n    }\n  )\n}\ndds_1_est <-\n  dds_1_fit |>\n  de_by_ctrs(\n    ctrs = list(\n      c(\"diabcd\", test = \"T2D\", ref = \"NGT\"),\n      c(\"diabcd\", test = \"T2D\", ref = \"IGT\"),\n      c(\"diabcd\", test = \"IGT\", ref = \"NGT\")\n    )\n  ) |>\n  (\\(x) Reduce(rbind, x))()\n\n\n\n\nShow the code\nlibrary(ggplot2)\ndds_1_gg <-\n  dds_1_est |>\n  ggplot(mapping = aes(log2FoldChange, log_padj, fill = log10(..count..))) +\n  geom_hline(yintercept = -1 * log10(c(0.05, 0.001)), lty = 2, lwd = .5) +\n  geom_vline(xintercept = c(-1, 1), lty = 2) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.05),\n    label = \"p = 0.05\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  annotate(\n    geom  = \"label\", x = -Inf, y = -1 * log10(0.001),\n    label = \"p = 0.001\",\n    fill = \"white\", hjust = \"left\", size = 2, alpha = 1\n  ) +\n  xlab(\"Log2-fold-change\") +\n  ylab(expression(-1 %*% log10(padj))) +\n  stat_bin_hex() +\n  scale_fill_gradient(low = \"black\", high = \"gray90\") +\n    facet_grid(. ~ ctrs) +\n  theme_minimal() +\n  theme(legend.position = \"bottom\", asp = 2 / 3)\n\n\n\n\nShow the code\np <- clean_slate() |>\n  add_header(c(\"FCA Collin\", \"UMB BESD\"), c(\"Confidential\", \"Draft\")) |>\n  add_title(\n    c(\n      \"Figure 1\",\n      strwrap(\n        \"Volcano plot - Response Size and Significance of Differential\n        Expression among all miRNA at Baseline\", width = 80\n      ),\n      \"Analysis Set: Full Analysis Set\"\n    )\n  ) |>\n  add_figure(dds_1_gg, height = .9) |>\n  add_footer(\n    \"Program t2d_07_mir / Env ayup_dbs:v0.1.0-alpha\",\n    params$version\n  )\n\n\n\n\nShow the code\nexport_as(\n  p,\n  file = file.path(params$paths$grh, \"fig_07_01.pdf\"),\n  file_graph_alone = file.path(params$paths$grh, \"fig_07_01_af.pdf\")\n)\n\n\n[log] output saved as: ../tlg/graph/fig_07_01.pdf\n\n\n[log] output saved as: ../tlg/graph/fig_07_01_af.pdf (annot. free)\n\n\n\n\nShow the code\nshow_slate(p)"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Committee for Medicinal Products for Human Use (CHMP). 2015.\n“Guideline on Adjustment for Baseline Covariates in Clinical\nTrials.” European Medicines Agency. https://www.ema.europa.eu/en/documents/scientific-guideline/guideline-adjustment-baseline-covariates-clinical-trials_en.pdf.\n\n\nCOMMITTEE FOR PROPRIETARY MEDICINAL PRODUCTS. 2003. “POINTS TO\nCONSIDER ON ADJUSTMENT FOR BASELINE COVARIATES.” The European\nAgency for the Evaluation of Medicinal Products Evaluation of Medicines\nfor Human Use. https://www.ema.europa.eu/en/documents/scientific-guideline/points-consider-adjustment-baseline-covariates_en.pdf.\n\n\nLiu, Guanghan F, Kaifeng Lu, Robin Mogg, Madhuja Mallick, and Devan V\nMehrotra. 2009. “Should Baseline Be a Covariate or Dependent\nVariable in Analyses of Change from Baseline in Clinical Trials?”\nStatistics in Medicine 28 (20): 2509–30. https://doi.org/10.1002/sim.3639.\n\n\nO’Connell, Nathaniel S, Lin Dai, Yunyun Jiang, Jaime L Speiser, Ralph\nWard, Wei Wei, Rachel Carroll, and Mulugeta Gebregziabher. 2017.\n“Methods for Analysis of Pre-Post Data in Clinical Research: A\nComparison of Five Common Methods.” Journal of Biometrics\n& Biostatistics 8 (1): 1. https://doi.org/10.4172/2155-6180.1000334.\n\n\nVan Breukelen, G. 2006. “ANCOVA Versus Change from Baseline: More\nPower Inrandomized Studies, More Bias in Nonrandomized Studies.”\nJournal of ClinicalEpidemiology, 59–920. https://doi.org/10.1016/j.jclinepi.2006.02.007.\n\n\nVickers, Andrew J. 2001. “The Use of Percentage Change from\nBaseline as an Outcome in a Controlled Trial Is Statistically\nInefficient: A Simulation Study.” BMC Medical Research\nMethodology 1 (1): 1–4. https://doi.org/10.1186/1471-2288-1-6.\n\n\nZhang, Shiyuan, James Paul, Manyat Nantha-Aree, Norman Buckley, Uswa\nShahzad, Ji Cheng, Justin DeBeer, et al. 2014. “Empirical\nComparison of Four Baseline Covariate Adjustment Methods in Analysis of\nContinuous Outcomes in Randomized Controlled Trials.”\nClinical Epidemiology 6: 227. https://doi.org/10.2147/clep.s56554."
  }
]